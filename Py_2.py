# -*- coding: utf-8 -*-
"""Py_2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-A5SpXMGpR-4McOVfUTa7XbcYj8Tu_W1
"""

#NUMPY kütüphanesi 

import numpy as np #numpy kütüphanesinin import edilip np kısayol olarak kullanılır. 

array = np.array([9,8,7])
print(array)
print("------------------")

array2 = np.array([1,2,3,4,5,6,7,8,9,10,11,12])
print(array2.shape)
print("------------------")

a = array2.reshape(3,4)
print(a)
print("------------------")

print("shape: ",a.shape)
print("------------------")

print("dimension: ",a.ndim)
print("------------------")

print("data type: ",a.dtype.name)
print("------------------")

print("size: ",a.size)
print("------------------")

print("type",type(a))
print("------------------")

array3 = np.array([[1,2,3,4,5],[6,7,8,9,10],[11,12,13,14,15]])
print(array3)
print("------------------")
print(array3.shape)
print("------------------")

zeros = np.zeros((3,5))
print(zeros)
print("------------------")
zeros[0,0] = 9
print(zeros)
print("------------------")

np.ones((3,5))

np.empty((4,6))

np.arange(10,100,10)

a = np.linspace(0,5,10)
print(a)
print("------------------")

a = np.array([9,8,7])
b = np.array([6,5,4])
print(a-b)
print("------------------")
print(a+b)
print("------------------")
print(b**2)
print("------------------")
print(a/b)
print("------------------")

a = np.array([1,2,3,4,5])

liste = [1,2,3,4,5]
array = np.array([6,7,8,9])
print(liste)
print("------------------")
print(array)
print("------------------")
array = np.array(liste)
print(array)
print("------------------")
liste2 = list(array)
print(liste2)
print("------------------")

a = np.array([9,8,7])
print(a)
print("------------------")


b = a
c = a
b[0] = 1
print(a,b,c)
print("------------------")


d = a.copy()

a = np.array([1,2,3,4,5])
print(a)
print("------------------")


print(a[2]) #arraydeki 3 sayısını verir.
print("------------------")

print(a[1:4]) #2. ve 3. indeksi yazdırır.
print("------------------")


reverse_array = a[::-1] #array'i ters çevirir.
print(reverse_array)
print("------------------")

b = np.array([[1,2,3,4,5],[6,7,8,9,10]])
print(b)
print("------------------")


print(b[1,1]) #1. satır 1. sütundaki değer olan 7'yi verir.
print("------------------")
print(b[:,1]) #satırların hepsini ve 2. sütunu verir. [2,7]
print("------------------")
print(b[1,:]) #2. satırdaki elemanların tamamını verir. [6 7 8 9 10]
print("------------------")
print(b[1,1:4]) #2. satırdaki 2. 3. 4. sütunları verir. [7 8 9]
print("------------------")
print(b[-1,:]) #son satır ve tüm sütunları alır. [6 7 8 9 10]
print("------------------")
print(b[:,-1]) #son sütun ve tüm satırları alır. [5 10]
print("------------------")

array = np.array([[1,2,3],[4,5,6],[7,8,9]]) #3*3'lük array oluşturuldu.
print(array)
print("------------------")

a = array.ravel() #ravel methoduyla tek boyutlu hale getirilir.
print(a)
print("------------------")

array2 = a.reshape(3,3) #tekrardan 3*3'lük array haline getirildi.
print(array2) 
print("------------------")

array_transpose = array2.T #array'in transpose'u alınır.
print(array_transpose)
print("------------------")

array3 = np.array([[1,2],[3,4],[5,6]])
print(array3)
print("------------------")

array3.resize((2,3)) #resize ile yapılan boyut değişimleri kalıcıdır, aynı array'in içine kaydeder.
#reshape ile yapılan değişimler kalıcı değildir. yapılan değişim başka bir değişkene kaydedilmelidir.
print(array3)
print("------------------")