# -*- coding: utf-8 -*-
"""matplotlib

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gFWQBM48X0UamxBkMaYWaZFvPo27JEt9
"""

import matplotlib.pyplot as plt
import numpy as np 

# Data 
x = np.arange(0, 10, 0.1)
# [0 0.1 0.2 0.3 0.4 0.5 ... 9.5 9.6 9.7 9.8 9.9]
y = np.sin(x)

# Graph creation 
plt.plot(x, y)

# Determine chart properties
plt.title("Sinüs Grafiği")
plt.xlabel("X Ekseni")
plt.ylabel("Y Ekseni")

# Show graphics
plt.show()

import matplotlib.pyplot as plt
import numpy as np 

# Data 
x = np.random.rand(50)
y = np.random.rand(50)
colors = np.random.rand(50)
sizes = np.random.randint(50, 150, 50)

# Graph creation 
plt.scatter(x, y, c=colors, s=sizes)

# Determine chart properties 
plt.title("Point Chart")
plt.xlabel("X-axis")
plt.ylabel("Y-axis")

# Show graphics
plt.show()

import matplotlib.pyplot as plt
import numpy as np

# Data 
data = np.random.randn(1000)

# Graph creation
plt.hist(data, bins=30)

# Determine chart properties
plt.title("Histogram")
plt.xlabel("Values")
plt.ylabel("Frequency")

# Show graphics
plt.show()

import matplotlib.pyplot as plt
import numpy as np

# Data 
x = ['A', 'B', 'C', 'D', 'E']
y = np.random.randint(1, 10, 5)

# Graph creation
plt.bar(x, y)

# Determine chart properties
plt.title("Column Chart")
plt.xlabel("Categories")
plt.ylabel("Values")

# Show graphics 
plt.show()

import matplotlib.pyplot as plt

# Data 
sizes = [30, 25, 15, 10, 5]

# Graph creation 
plt.pie(sizes) 

# Determine chart properties
plt.title("Pie Chart")

# Show graphics
plt.show()

import matplotlib.pyplot as plt
import numpy as np
from mpl_toolkits.mplot3d import Axes3D

# Data
x = np.arange(-5, 5, 0.25)
y = np.arange(-5, 5, 0.25)
x, Y = np.meshgrid(x, y)
r = np.sqrt(x**2 + y**2)
z = np.sin(r)

# 3D graphics creation 
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')

# plotting graphics
ax.plot_surface(x, y, z)

# Determine chart properties
ax.set_title("3D Graphics")
ax.set_xlabel("X axis")
ax.set_ylabel("Y axis")
ax.set_zlabel("Z axis")

# Show
plt.show()